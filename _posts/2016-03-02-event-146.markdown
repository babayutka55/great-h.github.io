---
layout: event
title: "すごい広島 #146"
date: 2016-03-02 18:00:00 JST
doorkeeper: https://great-h.doorkeeper.jp/events/40072
facebook: https://www.facebook.com/events/1131545726855443/
togetter: http://togetter.com/li/945364
place: "city_hiroshima_m-plaza-meeting_c"
categories: events
---

# 参加者


## [mu2in](http://twitter.com/mu2in)


## Nobusuke Sasaki


## [Nyoho](http://nyoho.jp/)

### やったこと

* try! Swift の[ハッシュタグ #tryswiftconf](https://twitter.com/search?q=%23tryswiftconf) を羨ましそうに追った
* Swiftのわしわしフレームワークを作り始めた。そのために https://robots.thoughtbot.com/creating-your-first-ios-framework にしたがって実習を行った。
* スライドは出来なかった。
 
### わかったこと

* try! Swift conference はとても有用なカンファレンスだとわかった。ビデオ販売が望まれる。
* Swiftのフレームワークを作るのは簡単で、そして楽しそうだとわかった。

### 次にしたいこと

* 来週だとスライド作りは遅いので、**スライドは来週にスライドしない**。
* 次はわしわしフレームワークをちゃんと有用になるようにしたい。


## [k2works](https://github.com/k2works)


## [atmitani](http://twitter.com/atmitani)


## [mando](http://twitter.com/m_ando_japan)

### [やったこと](https://github.com/great-h/great-h.github.io/issues/1768)

* 参加者にあいさつする
* IoTLT広島の準備


## [tsuda_ahr](http://twitter.com/tsuda_ahr)


## [高石 武史](https://www.facebook.com/app_scoped_user_id/100003231334661/)

### [やったこと](https://github.com/great-h/great-h.github.io/issues/1777)

* OSC 広島の打ち合わせ


## [takatayoshitake](http://twitter.com/takatayoshitake)

### [やったこと](https://github.com/great-h/great-h.github.io/issues/1773)

* Hiroshima Ruby Conferenceの準備


## [Naomi Yoriji](https://www.facebook.com/app_scoped_user_id/496792670482609/)


## [eiel](http://eiel.info/)

### やったこと

* OSC広島のミーティングに参加した
* [swagger](http://swagger.io/)で遊んだ
  * かいたyaml https://gist.github.com/eiel/659c9f4e5c9447cf3354
  * jsonに変換したもの https://gist.github.com/eiel/862b914b1c2bde21282f

### わかったこと

* swaggerを使うとAPIドキュメントやサーバサイドのテンプレート、クライアントコードを生成できる(レスポンス内容の確認もできそう)
* [swagger-editor](http://editor.swagger.io/#/)をつかってyamlをかくと、リアルタイムにAPIドキュメントが記述される
  * リクエストに必要なパラメータを入力するとリクエストすることもできる
  * さまざまなサーバコードやクライアントコードの雛形が生成できる
* 作成したyamlからjsonに変換し、[swagger-ui](http://petstore.swagger.io/#!/self/get_self_home)にわたしてやると同様に実際にリクエスト可能なドキュメントが表示される。
  * curlでの実行方法も表示される

### 次にしたいこと

* レスポンスのチェックの方法をしらべる
* コード生成のカスタマイズ
